/*
 * Copyright (c) 2017 Intel Corporation
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   * Redistributions of source code must retain the above copyright notice,
 *     this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 *   * Neither the name of Intel Corporation nor the names of its contributors
 *     may be used to endorse or promote products derived from this software
 *     without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef SRC_CORE_FIRMWARE_INTERFACE_FWCOMMANDSWRAPPER_H_
#define SRC_CORE_FIRMWARE_INTERFACE_FWCOMMANDSWRAPPER_H_

#include <nvm_types.h>
#include "firmware_interface/fw_commands.h"
#include <core/ExportCore.h>

namespace core
{
namespace firmware_interface
{

class  NVM_CORE_API FwCommandsWrapper
{
public:
	virtual ~FwCommandsWrapper();

	static FwCommandsWrapper &getFwWrapper();

	//- for cmd in commands

	virtual struct {{cmd.name|fw_cmd_result}} {{cmd|fw_cmd_name|camel}}(unsigned int handle
	{%- for f in cmd.input_fields_not_ignored -%}
	,
	const {{f.c_definition}}
	{%- endfor -%}
	) const;

	//-		if cmd.has_output
	virtual void {{cmd.name|fw_cmd_free|camel}}(struct {{cmd.name|fw_cmd_result}} *p_result) const;

	//-		endif

	//- endfor

protected:
	FwCommandsWrapper();

};

}
}

#endif /* SRC_CORE_FIRMWARE_INTERFACE_FWCOMMANDSWRAPPER_H_ */
