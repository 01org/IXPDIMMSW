/*
 * Copyright (c) 2017 Intel Corporation
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   * Redistributions of source code must retain the above copyright notice,
 *     this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 *   * Neither the name of Intel Corporation nor the names of its contributors
 *     may be used to endorse or promote products derived from this software
 *     without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include "FwCommandsWrapper.h"
#include <LogEnterExit.h>

namespace core
{
namespace firmware_interface
{

FwCommandsWrapper &FwCommandsWrapper::getFwWrapper()
{
	LogEnterExit(__FUNCTION__, __FILE__, __LINE__);
	static FwCommandsWrapper *result = new FwCommandsWrapper();
	return *result;
}

FwCommandsWrapper::FwCommandsWrapper()
{
	LogEnterExit(__FUNCTION__, __FILE__, __LINE__);
}

FwCommandsWrapper::~FwCommandsWrapper()
{
	LogEnterExit(__FUNCTION__, __FILE__, __LINE__);
}

//- for cmd in commands

struct {{cmd.name|fw_cmd_result}} FwCommandsWrapper::{{cmd|fw_cmd_name|camel}}(unsigned int handle
{%- for f in cmd.input_fields_changeable -%}
,
const {{f.c_definition}}
{%- endfor -%}
) const
{
	LogEnterExit(__FUNCTION__, __FILE__, __LINE__);

	return {{cmd|fw_cmd_name}}(handle
	{%- for f in cmd.input_fields_changeable -%}
	,
	{{f.name}}
	{%- endfor -%}
	);
}

//-		if cmd.has_output
void FwCommandsWrapper::{{cmd.name|fw_cmd_free|camel}}(struct {{cmd.name|fw_cmd_result}} *p_result) const
{
	LogEnterExit(__FUNCTION__, __FILE__, __LINE__);

	{{cmd.name|fw_cmd_free}}(p_result);
}

//-		endif

//- endfor

}
}